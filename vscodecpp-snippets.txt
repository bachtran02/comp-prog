{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	"ttemplate": {
	"prefix": "ttemplate",
	"body": [
		"#include <bits/stdc++.h>",
		"using namespace std;",
		"",
		"void solve(){",
		"    $0",
		"",
		"}",
		"",
		"int main(){",
		"    ios::sync_with_stdio(false); cin.tie(nullptr);",
		"    // freopen(\"input.txt\",\"r\",stdin); freopen(\"out.txt\",\"w\",stdout)",
		"    int T = 1;",
		"    cin >> T;",
		"    for(int i = 0; i < T; i++) {",
		"        solve();",
		"    }",
		"}"
	],
	"description": "c++ template"
	},

	"template": {
		"prefix": "template",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"",
			"int main(){",
			"    // freopen(\"input.txt\",\"r\",stdin); freopen(\"out.txt\",\"w\",stdout);",
			"    ios::sync_with_stdio(false); cin.tie(nullptr);",
			"    $0",
			"}"
		],
		"description": "c++ template"
	},
	
	"usaco training": {
		"prefix": "usaco",
		"body": [
			"/*",
			"ID: themasa1",
			"TASK: ${TM_FILENAME_BASE}",
			"LANG: C++14",
			"*/",
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"ifstream fin (\"${TM_FILENAME_BASE}.in\");",
			"ofstream fout (\"${TM_FILENAME_BASE}.out\");",
			"",
			"",
			"",
			"int main() {",
			"    $0",
			"    ",
			"    return 0;",
			"}"
		],
		"description": "usaco training snippet"
	  }
}