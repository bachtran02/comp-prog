{
	"ttemplate": {
	"prefix": "ttemplate",
	"body": [
		"#include <bits/stdc++.h>",
		"using namespace std;",
		"",
		"void solve(){",
		"    $0",
		"",
		"}",
		"",
		"int main(){",
		"    ios::sync_with_stdio(false); cin.tie(nullptr);",
		"    int T = 1;",
		"    cin >> T;",
		"    for(int i = 1; i <= T; i++) {",
		"        solve();",
		"    }",
		"}"
	],
	"description": "c++ template"
	},

	"template": {
		"prefix": "template",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"",
			"int main(){",
			"    ios::sync_with_stdio(false); cin.tie(nullptr);",
			"    $0",
			"}"
		],
		"description": "c++ template"
	},
	
	"usaco training": {
		"prefix": "usaco",
		"body": [
			"/*",
			"ID: themasa1",
			"TASK: ${TM_FILENAME_BASE}",
			"LANG: C++14",
			"*/",
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"",
			"",
			"int main() {",
			"    // freopen(\"${TM_FILENAME_BASE}.in\",\"r\",stdin); freopen(\"${TM_FILENAME_BASE}.out\",\"w\",stdout);",
			"    $0",
			"    ",
			"    return 0;",
			"}"
		],
		"description": "usaco training template"
	},
	
	"freopen": {
		"prefix": "openfile",
		"body": [
			"freopen(\"input.txt\",\"r\",stdin); freopen(\"out.txt\",\"w\",stdout);"
		],
		"description": "use file input output"
	},

	"boolttemplate": {
		"prefix": "ttbool",
		"body": [
		  "#include <bits/stdc++.h>",
		  "using namespace std;",
		  "",
		  "bool solve(){",
		  "    $0",
		  "}",
		  "",
		  "int main(){",
		  "    ios::sync_with_stdio(false); cin.tie(nullptr);",
		  "    int T = 1;",
		  "    cin >> T;",
		  "    for(int i = 1; i <= T; i++) {",
		  "        if(solve()){",
		  "            cout << \"YES\\n\";",
		  "        } else {",
		  "            cout << \"NO\\n\";",
		  "        }",
		  "    }",
		  "}"
		],
		"description": ""
	  }
}